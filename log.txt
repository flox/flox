flox-cli-tests: Running test suite with:
  PROJECT_TESTS_DIR:        /Users/zmitchell/src/flox/double-bashrc-exec/cli/tests
  bats                      /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/bin/bats
  bats options              --print-output-on-failure --verbose-run --timing --jobs 4 --no-parallelize-across-files 
  bats tests                activate.bats
1..255
_FLOX_LOCAL_DEV: 1
FLOX_BIN: /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox
BUILDENV_BIN: /Users/zmitchell/src/flox/double-bashrc-exec/build/flox-buildenv/bin/buildenv
WATCHDOG_BIN: /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox-watchdog
FLOX_ACTIVATIONS_BIN: /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox-activations
FLOX_INTERPRETER: /Users/zmitchell/src/flox/double-bashrc-exec/build/flox-interpreter
NIX_PLUGINS: /Users/zmitchell/src/flox/double-bashrc-exec/build/nix-plugins/lib/nix-plugins
NIX_BIN: /nix/store/cc3lbc73ysk9bic3ji1vbbh7gdq31azz-nix-2.28.4/bin/nix
NIX_STORE: /nix/store
REAL_GIT_CONFIG_GLOBAL: /Users/zmitchell/.gitconfig
REAL_GIT_CONFIG_SYSTEM: /etc/gitconfig
REAL_HOME: /Users/zmitchell
REAL_XDG_CACHE_HOME: /Users/zmitchell/.cache
REAL_XDG_CONFIG_HOME: /Users/zmitchell/.config
REAL_XDG_DATA_HOME: /Users/zmitchell/.local/share
REAL_XDG_STATE_HOME: /Users/zmitchell/.local/state
TESTS_DIR: /tmp/nix-shell.ZT2M3S/flox-cli-tests-kcsR2q
INPUT_DATA: /Users/zmitchell/src/flox/double-bashrc-exec/test_data/input_data
GENERATED_DATA: /Users/zmitchell/src/flox/double-bashrc-exec/test_data/generated
MANUALLY_GENERATED: /Users/zmitchell/src/flox/double-bashrc-exec/test_data/manually_generated
UNIT_TEST_GENERATED: /Users/zmitchell/src/flox/double-bashrc-exec/test_data/unit_test_generated
FLOX_TEST_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home
HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home
PATH: /nix/store/6zaza3y7g04ilxmfr0l4vl1xrlxhbdz4-bats-1.12.0/libexec/bats-core:/Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug:/nix/store/fx3w71jy6d57i32k58jh6n5z1l8lii6z-bash-interactive-5.3p3/bin:/nix/store/lpw8c8czj01smmliz4y80bpikkm53q0s-fish-4.0.2/bin:/nix/store/s9iglfj14vbv1n9pwsambfly96x6i20v-tcsh-6.24.16/bin:/nix/store/8sifsbv26zrg9j7mq5mx376ib151zvis-zsh-5.9/bin:/nix/store/x9lf4y7s4yp6il66mv5npc2f99yy4vgq-dash-0.5.12/bin:/nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/bin:/nix/store/9i147r2fj9gj295jxa0nf2m4nwdkc94r-coreutils-9.7/bin:/nix/store/gv7qf6zgiarqg83hvmpmhp8kzlq628zd-curl-8.14.1-bin/bin:/nix/store/6p1kfmr4lsn6w42rnq2svg0gmwshr94s-diffutils-3.12/bin:/nix/store/y2h7s8wnisy2bdpaa1ljhccwamm6pidd-entr-5.7/bin:/nix/store/wh0gha8mr742ln775k0m24a4p81rh830-expect-5.45.4/bin:/nix/store/c09zwg0n8sgii76cy1ggmfs950srn4fv-findutils-4.10.0/bin:/nix/store/ahsg0s563409iwkin6pyyxxfwhrscrqs-gawk-5.3.2/bin:/nix/store/56avrmkafl3ymr5azsgx4lagzrhc79nd-git-2.50.1/bin:/nix/store/rvhvjvwcssnz7i8yyp436h7qrql2pvcz-gnugrep-3.12/bin:/nix/store/8dggzrv5nih8myns336b0gqp30czlg8d-gnupg-2.4.8/bin:/nix/store/vl63mv5qaqyfgb3y76p8zijacjm2rif3-gnused-4.9/bin:/nix/store/7gb37jk1hjsb8kww238by7cw1qi9sczm-gnutar-1.35/bin:/nix/store/w58c3ip3177vib3zwnmnjk5q62hvfjqz-jq-1.8.1-bin/bin:/nix/store/ip6srscrihwxkhw4jq0v5wsayvc1iwin-man-db-2.13.1/bin:/nix/store/h6sr3zbvrla8i2vj5dc89ip24irs026c-ncurses-6.5/bin:/nix/store/cc3lbc73ysk9bic3ji1vbbh7gdq31azz-nix-2.28.4/bin:/nix/store/49psgc9m367a2zbg19xl0iyx4bplzaxx-openssh-10.0p2/bin:/nix/store/d1pf44a897gpa7yl4sc5y7vsnhdladrh-parallel-20250822/bin:/nix/store/lc0ziwvh7ikpq5057i1jr4438g6w8hdb-pstree-2.39/bin:/nix/store/rh7j7kxc799ri5c71fsymhm50by3bhy3-util-linux-1003.1-2008/bin:/nix/store/7ih1f9q5731w0i3p8h3lqd997mrhf15b-util-linux-2.41.1-bin/bin:/nix/store/ib5b16x3rb6lhwbhj3jy604hyfv8f1pf-which-2.23/bin:/nix/store/cwkvnk1i3is9h369g6s9qrd4h4ynf9qr-python3.13-yq-3.4.3/bin:/nix/store/27ws9d0s33whr7dr11n6bs4j171v4c42-process-compose-1.73.0/bin:/nix/store/p5mdgdar62yhm29y9fignx7szp7i8vny-procps-1003.1-2008/bin:/nix/store/bxsjr6ivqilmb5d5ayq5bc24lia7r3vk-podman-5.6.0/bin:/run/wrappers/bin:/nix/store/ycb672sy3cadcaahyxscblrzdmja9grg-locale/bin
XDG_CACHE_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.cache
XDG_CONFIG_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.config
XDG_DATA_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.local/share
XDG_STATE_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.local/state
FLOX_CACHE_DIR: /tmp/flox.tests.aiamDH
FLOX_CONFIG_DIR: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.config/flox
FLOX_DATA_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.local/share/flox
FLOX_STATE_HOME: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.local/state/flox
FLOX_META: /tmp/flox.tests.aiamDH/meta
FLOX_ENVIRONMENTS: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/home/.local/share/flox/environments
NIX_SYSTEM: aarch64-darwin
FLOX_LATEST_VERSION: 1.7.3
FLOX_TEST_SSH_KEY: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/ssh/id_ed25519
SSH_AUTH_SOCK: /tmp/nix-shell.ZT2M3S/ssh-jgpRsU0Y3ROM/agent.27223
GIT_CONFIG_SYSTEM: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/git/gitconfig.system
GIT_CONFIG_GLOBAL: /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/suite/git/gitconfig.global
TEST_NIXPKGS_REV_NEW: ab5fd150146dcfe41fda501134e6503932cc8dfd
ok 1 bash: interactive activate puts package in path in 693ms
ok 2 fish: interactive activate puts package in path in 996ms
ok 3 tcsh: interactive activate puts package in path in 675ms
ok 4 zsh: interactive activate puts package in path in 1544ms
ok 5 zsh: interactive activate works with VCS plugins in 2153ms
ok 6 bash: interactive activate runs profile scripts in 621ms
ok 7 bash: command activate runs profile scripts in 556ms
ok 8 bash: command activate skips profile scripts with FLOX_NOPROFILE in 553ms
ok 9 bash: activation script can be run directly in 863ms
ok 10 bash: activation script can be run with --noprofile in 481ms
ok 11 fish: interactive activate runs profile scripts in 950ms
ok 12 fish: command activate runs profile scripts in 682ms
ok 13 fish: command activate skips profile scripts with FLOX_NOPROFILE in 662ms
ok 14 fish: activation script can be run directly in 2032ms
ok 15 fish: activation script can be run directly with --noprofile in 656ms
ok 16 tcsh: interactive activate runs profile scripts in 629ms
ok 17 tcsh: command activate runs profile scripts in 560ms
ok 18 tcsh: command activate skips profile scripts with FLOX_NOPROFILE in 556ms
ok 19 tcsh: activation script can be run directly in 1021ms
ok 20 tcsh: activation script can be run directly with --noprofile in 495ms
ok 21 zsh: interactive activate runs profile scripts in 1473ms
ok 22 zsh: command activate runs profile scripts in 1085ms
ok 23 zsh: command activate skips profile scripts with FLOX_NOPROFILE in 551ms
ok 24 zsh: activation script can be run directly in 1827ms
ok 25 zsh: activation script can be run directly with --noprofile in 488ms
ok 26 bash: activate runs hook only once in nested activation in 572ms
ok 27 fish: activate runs hook only once in nested activation in 731ms
ok 28 tcsh: activate runs hook only once in nested activation in 5594ms
ok 29 zsh: activate runs hook only once in nested activations in 1098ms
ok 30 bash: activate runs profile only once with repeated in-place activation in 574ms
ok 31 fish: activate runs profile only once with repeated in-place activation in 714ms
ok 32 tcsh: activate runs profile only once with repeated in-place activation in 687ms
ok 33 zsh: activate runs profile only once with repeated in-place activation in 1109ms
ok 34 bash: activate command-mode runs hook and profile scripts only once in 554ms
ok 35 bash: interactive activate runs hook and profile scripts only once in 622ms
ok 36 zsh: activate command-mode runs hook and profile scripts only once in 1098ms
ok 37 zsh: interactive activate runs hook and profile scripts only once in 1457ms
ok 38 bash: activate respects ~/.bashrc in 588ms
ok 39 fish: activate respects ~/.config/fish/config.fish in 912ms
ok 40 tcsh: activate respects ~/.tcshrc in 590ms
ok 41 zsh: activate respects ~/.zshrc in 1443ms
ok 42 zsh: interactive activate respects history settings from dotfile in 1583ms
ok 43 zsh: interactive activate respects history settings from dotfile based on original ZDOTDIR in 1574ms
ok 44 zsh: interactive activate respects history settings from environment variable where available in 1694ms
ok 45 zsh: uses environment specific completion cache in 2122ms
ok 46 bash: activate sets env var in 759ms
ok 47 fish: activate sets env var in 1201ms
ok 48 tcsh: activate sets env var in 768ms
ok 49 zsh: activate sets env var in 1605ms
ok 50 bash: activate sets env var before hook in 545ms
ok 51 fish: activate sets env var before hook in 666ms
ok 52 tcsh: activate sets env var before hook in 548ms
ok 53 zsh: activate sets env var before hook in 976ms
ok 54 'flox activate' modifies path (bash) in 928ms
ok 55 'flox activate' modifies path (fish) in 1185ms
ok 56 'flox activate' modifies path (tcsh) in 928ms
ok 57 'flox activate' modifies path (zsh) in 1459ms
ok 58 'flox activate' prints script to modify current shell (bash) in 5557ms
ok 59 'flox activate' prints script to modify current shell (fish) in 5531ms
ok 60 'flox activate' prints script to modify current shell (tcsh) in 5542ms
ok 61 'flox activate' prints script to modify current shell (zsh) in 5523ms
ok 62 'flox activate' modifies the current shell (bash) in 638ms
ok 63 'flox activate' modifies the current shell (fish) in 762ms
ok 64 'flox activate' modifies the current shell (tcsh) in 675ms
ok 65 'flox activate' modifies the current shell (zsh) in 650ms
ok 66 indented heredocs in the manifest are outdented (bash) in 552ms
ok 67 indented heredocs in the manifest are outdented (zsh) in 1089ms
ok 68 indented heredocs in the manifest are outdented (tcsh) in 545ms
ok 69 bash: 'flox activate' patches PATH correctly when already activated in 548ms
ok 70 fish: 'flox activate' patches PATH correctly when already activated in 853ms
ok 71 tcsh: 'flox activate' patches PATH correctly when already activated in 671ms
ok 72 zsh: 'flox activate' patches PATH correctly when already activated in 1173ms
ok 73 'flox activate' sets python vars if python is installed in 753ms
ok 74 'flox activate' retains existing python vars if python is not installed in 638ms
ok 75 'flox *' uses local environment over 'default' environment in 1016ms
ok 76 'hook.on-activate' runs in 564ms
ok 77 'hook.on-activate' modifies environment variables (bash) in 576ms
ok 78 'hook.on-activate' modifies environment variables (fish) in 701ms
ok 79 'hook.on-activate' modifies environment variables (tcsh) in 569ms
ok 80 'hook.on-activate' modifies environment variables (zsh) in 1106ms
ok 81 'hook.on-activate' modifies environment variables for first nested activation (bash) in 553ms
ok 82 'hook.on-activate' modifies environment variables for first nested activation (fish) in 718ms
ok 83 'hook.on-activate' modifies environment variables for first nested activation (tcsh) in 680ms
ok 84 'hook.on-activate' modifies environment variables for first nested activation (zsh) in 1110ms
ok 85 'hook.on-activate' unsets environment variables for first nested activation (bash) in 587ms
ok 86 'hook.on-activate' unsets environment variables for first nested activation (fish) in 715ms
ok 87 'hook.on-activate' unsets environment variables for first nested activation (tcsh) in 593ms
ok 88 'hook.on-activate' unsets environment variables for first nested activation (zsh) in 1115ms
ok 89 bash: 'hook.on-activate' is sourced before 'profile.common' in 574ms
ok 90 fish: 'hook.on-activate' is sourced before 'profile.common' in 697ms
ok 91 tcsh: 'hook.on-activate' is sourced before 'profile.common' in 578ms
ok 92 zsh: 'hook.on-activate' is sourced before 'profile.common' in 587ms
ok 93 bash: 'profile.common' is sourced before 'profile.bash' in 567ms
ok 94 fish: 'profile.common' is sourced before 'profile.fish' in 707ms
ok 95 tcsh: 'profile.common' is sourced before 'profile.tcsh' in 609ms
ok 96 zsh: 'profile.common' is sourced before 'profile.zsh' in 584ms
ok 97 bash: tolerates env paths containing spaces in 581ms
ok 98 fish: tolerates env paths containing spaces in 764ms
ok 99 tcsh: tolerates env paths containing spaces in 631ms
ok 100 zsh: tolerates env paths containing spaces in 617ms
ok 101 bash: tolerates PATH already containing spaces in 552ms
ok 102 fish: tolerates PATH already containing spaces in 714ms
ok 103 tcsh: tolerates PATH already containing spaces in 585ms
ok 104 zsh: tolerates PATH already containing spaces in 587ms
ok 105 bash: tolerates cwd containing braces in 586ms
ok 106 fish: tolerates cwd containing braces in 745ms
ok 107 tcsh: tolerates cwd containing braces in 137ms # skip Apparently regressed in 1.4.3, now failing with Missing '}', due to quoting in _FLOX_ACTIVE_ENVIRONMENTS (#3173)
ok 108 zsh: tolerates cwd containing braces in 611ms
ok 109 bash: test for infinite source loop in 576ms
ok 110 fish: test for infinite source loop in 833ms
ok 111 tcsh: test for infinite source loop in 592ms
ok 112 zsh: test for infinite source loop in 1076ms
ok 113 bash: preserve custom ZDOTDIR in 543ms
ok 114 fish: preserve custom ZDOTDIR in 650ms
ok 115 tcsh: preserve custom ZDOTDIR in 543ms
ok 116 zsh: preserve custom ZDOTDIR in 1082ms
ok 117 zsh: in-place activation with non-interactive non-login shell in 579ms
ok 118 zsh: in-place activation with interactive non-login shell in 1117ms
ok 119 zsh: in-place activation with interactive login shell in 1124ms
ok 120 zsh: in-place activation from .zshenv in 982ms
ok 121 zsh: activation after in-place activation from .zshrc in 12204ms
ok 122 zsh: in-place activation from .zlogin in 1142ms
ok 123 zsh: in-place activation from .zprofile in 1132ms
ok 124 command: activation does not leak FLOX_SHELL variable in 544ms
ok 125 in-place: activation does not leak FLOX_SHELL variable in 528ms
not ok 126 bash: confirm hooks and dotfiles sourced correctly in 578ms
# tags: activate activate activate:validate_hook_and_dotfile_sourcing
# (from function `assert_equal' in file /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/share/bats/bats-assert/src/assert_equal.bash, line 40,
#  in test file activate.bats, line 2578)
#   `assert_equal "${#lines[@]}" 7' failed
# ✨ Created environment 'project-126' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# Testing bash
# Sourcing .profile
# Setting PATH from .profile
# sourcing hook.on-activate
# sourcing profile.common
# sourcing profile.bash
#
# -- values do not equal --
# expected : 7
# actual   : 5
# --
#
# Last output:
# Sourcing .profile
# Setting PATH from .profile
# sourcing hook.on-activate
# sourcing profile.common
# sourcing profile.bash
ok 127 fish: confirm hooks and dotfiles sourced correctly in 718ms
ok 128 tcsh: confirm hooks and dotfiles sourced correctly in 575ms
ok 129 zsh: confirm hooks and dotfiles sourced correctly in 1071ms
ok 130 bash: confirm _flox_activate_tracelevel set in nested activation in 603ms
ok 131 fish: confirm _flox_activate_tracelevel set in nested activation in 1024ms
ok 132 tcsh: confirm _flox_activate_tracelevel set in nested activation in 685ms
ok 133 zsh: confirm _flox_activate_tracelevel set in nested activation in 1568ms
ok 134 profile: RUST_SRC_PATH set when rustPlatform.rustLibSrc installed in 609ms
ok 135 profile: JUPYTER_PATH not modified when Jupyter is not installed in 650ms
ok 136 profile: JUPYTER_PATH is modified when Jupyter is installed in 2327ms
ok 137 profile: CMAKE_PREFIX_PATH not modified when cmake is not installed in 644ms
ok 138 profile: CMAKE_PREFIX_PATH is modified when cmake is installed in 613ms
ok 139 activate works with fish 3.2.2 in 738ms
not ok 140 in-place activate works with bash 3 in 632ms
# tags: activate
# (from function `assert_output' in file /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/share/bats/bats-assert/src/assert_output.bash, line 194,
#  in test file activate.bats, line 2911)
#   `assert_output - <<EOF' failed
# ✨ Created environment 'project-140' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# ✅ Environment successfully updated.
# hook.on-activate
# profile.common
# profile.bash
# /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/140/project-140/.flox/run/aarch64-darwin.project-140.dev/bin/hello
#
# -- output differs --
# expected (6 lines):
#   hook.on-activate
#   Sourcing .bashrc
#   Setting PATH from .bashrc
#   profile.common
#   profile.bash
#   /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/140/project-140/.flox/run/aarch64-darwin.project-140.dev/bin/hello
# actual (4 lines):
#   hook.on-activate
#   profile.common
#   profile.bash
#   /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/140/project-140/.flox/run/aarch64-darwin.project-140.dev/bin/hello
# --
#
# Last output:
# hook.on-activate
# profile.common
# profile.bash
# /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/140/project-140/.flox/run/aarch64-darwin.project-140.dev/bin/hello
ok 141 no unset variables in bash in 541ms
ok 142 no unset variables in zsh in 574ms
ok 143 nested interactive activate fails in 652ms
ok 144 interactive: attach runs hook once in 695ms
ok 145 command-mode: attach runs hook once in 673ms
ok 146 in-place: attach runs hook once in 677ms
ok 147 bash: interactive: attach runs profile twice in 678ms
ok 148 bash: command-mode: attach runs profile twice in 680ms
ok 149 bash: in-place: attach runs profile twice in 661ms
ok 150 fish: interactive: attach runs profile twice in 1109ms
ok 151 fish: command-mode: attach runs profile twice in 1022ms
ok 152 fish: in-place: attach runs profile twice in 900ms
ok 153 tcsh: interactive: attach runs profile twice in 788ms
ok 154 tcsh: command-mode: attach runs profile twice in 658ms
ok 155 tcsh: in-place: attach runs profile twice in 694ms
ok 156 zsh: interactive: attach runs profile twice in 1844ms
ok 157 zsh: command-mode: attach runs profile twice in 1309ms
ok 158 zsh: in-place: attach runs profile twice in 1209ms
ok 159 bash: interactive: attach sets vars from hook in 697ms
ok 160 bash: command-mode: attach sets vars from hook in 694ms
ok 161 bash: in-place: attach sets vars from hook in 684ms
ok 162 fish: interactive: attach sets vars from hook in 1107ms
ok 163 fish: command-mode: attach sets vars from hook in 903ms
ok 164 fish: in-place: attach sets vars from hook in 908ms
ok 165 tcsh: interactive: attach sets vars from hook in 681ms
ok 166 tcsh: command-mode: attach sets vars from hook in 689ms
ok 167 tcsh: in-place: attach sets vars from hook in 692ms
ok 168 zsh: interactive: attach sets vars from hook in 1858ms
ok 169 zsh: command-mode: attach sets vars from hook in 1335ms
ok 170 zsh: in-place: attach sets vars from hook in 1206ms
ok 171 bash: interactive: attach sets vars from profile in 695ms
ok 172 bash: command-mode: attach sets vars from profile in 693ms
ok 173 bash: in-place: attach sets vars from profile in 680ms
ok 174 fish: interactive: attach sets vars from profile in 1211ms
ok 175 fish: command-mode: attach sets vars from profile in 901ms
ok 176 fish: in-place: attach sets vars from profile in 892ms
ok 177 tcsh: interactive: attach sets vars from profile in 677ms
ok 178 tcsh: command-mode: attach sets vars from profile in 694ms
ok 179 tcsh: in-place: attach sets vars from profile in 700ms
ok 180 zsh: interactive: attach sets vars from profile in 1877ms
ok 181 zsh: command-mode: attach sets vars from profile in 1304ms
ok 182 zsh: in-place: attach sets vars from profile in 1230ms
ok 183 command-mode: activation gets cleaned up and subsequent activation starts in 966ms
ok 184 in-place: activation gets cleaned up and subsequent activation starts in 975ms
ok 185 in-place: repeat activations work after modifying environment in 941ms
ok 186 version: refuses to attach to an older activations.json version in 551ms
ok 187 version: upgrades the activations.json version in 758ms
ok 188 activate: sets FLOX_DISABLE_METRICS from config in 587ms
ok 189 can use fallback interpreter in 537ms
ok 190 fallback flag activates with rendered interpreter in 550ms
ok 191 can use bundled interpreter to mitigate broken bundled interpreter in 673ms
ok 192 attach doesn't break MANPATH in 1497ms
ok 193 attach doesn't break PATH in 1135ms
ok 194 bash: repeat activation in .bashrc doesn't break aliases in 1068ms
ok 195 bash: repeat activation in .bashrc creates correct PATH ordering in 1062ms
ok 196 tcsh: repeat activation in .tcshrc doesn't break aliases in 1107ms
ok 197 tcsh: repeat activation in .tcshrc creates correct PATH ordering in 1079ms
ok 198 fish: repeat activation in config.fish doesn't break aliases in 1494ms
ok 199 fish: repeat activation in config.fish creates correct PATH ordering in 1423ms
ok 200 zsh: repeat activation in .zshrc doesn't break aliases in 2264ms
ok 201 zsh: repeat activation in .zshenv doesn't break aliases in 2327ms
ok 202 zsh: repeat activation in .zshenv and .zshrc doesn't break aliases in 2302ms
ok 203 zsh: repeat activation in .zshrc creates correct PATH ordering in 2273ms
ok 204 zsh: repeat activation in .zshenv creates correct PATH ordering in 2142ms
ok 205 zsh: repeat activation in .zshenv and .zshrc creates correct PATH ordering in 2215ms
not ok 206 interactive: bash attachs to an activation from the previous release in 1033ms
# tags: activate activate activate:attach activate:attach:previous-release
# (from function `assert_output' in file /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/share/bats/bats-assert/src/assert_output.bash, line 194,
#  from function `attach_previous_release' in file activate.bats, line 4316,
#  in test file activate.bats, line 4351)
#   `attach_previous_release bash interactive' failed
# ✨ Created environment 'project-206' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# ✅ Environment successfully updated.
#
# sourcing hook.on-activate for first time
# Sourcing .bashrc
# Setting PATH from .bashrc
# spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206
# ✅ Attached to existing activation of environment 'project-206'
# To stop using this environment, type 'exit'
# 
# Sourcing .bashrc
# Setting PATH from .bashrc
# DEBUG: setting prompt
# DEBUG: storing PS1: myprompt> 
# DEBUG: set PS1: flox [project-206] myprompt> 
# true && exit
# flox [project-206] myprompt> true && exit
# exit
# === BEGIN DEBUG OUTPUT ===
# spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206^M$
# M-bM-^\M-^E Attached to existing activation of environment 'project-206'^M$
# To stop using this environment, type 'exit'^M$
# ^M$
# Sourcing .bashrc^M$
# Setting PATH from .bashrc^M$
# DEBUG: setting prompt^M$
# DEBUG: storing PS1: myprompt> ^M$
# DEBUG: set PS1: flox [project-206] myprompt> ^M$
# true && exit^M$
# flox [project-206] myprompt> true && exit^M$
# exit^M$
# === END   DEBUG OUTPUT ===
# spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206
# ✅ Attached to existing activation of environment 'project-206'
# To stop using this environment, type 'exit'
#
# Sourcing .bashrc
# Setting PATH from .bashrc
# DEBUG: setting prompt
# DEBUG: storing PS1: myprompt>
# DEBUG: set PS1: flox [project-206] myprompt>
# true && exit
# flox [project-206] myprompt> true && exit
# exit
#
# -- output differs --
# expected (8 lines):
#   spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206
#   ✅ Attached to existing activation of environment 'project-206'
#   To stop using this environment, type 'exit'
#
#   Sourcing .bashrc
#   Setting PATH from .bashrc
#   flox [project-206] myprompt> true && exit
#   exit
# actual (12 lines):
#   spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206
#   ✅ Attached to existing activation of environment 'project-206'
#   To stop using this environment, type 'exit'
#
#   Sourcing .bashrc
#   Setting PATH from .bashrc
#   DEBUG: setting prompt
#   DEBUG: storing PS1: myprompt>
#   DEBUG: set PS1: flox [project-206] myprompt>
#   true && exit
#   flox [project-206] myprompt> true && exit
#   exit
# --
#
#
# Last output:
# spawn /Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug/flox activate --dir /tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/206/project-206
# ✅ Attached to existing activation of environment 'project-206'
# To stop using this environment, type 'exit'
#
# Sourcing .bashrc
# Setting PATH from .bashrc
# DEBUG: setting prompt
# DEBUG: storing PS1: myprompt>
# DEBUG: set PS1: flox [project-206] myprompt>
# true && exit
# flox [project-206] myprompt> true && exit
# exit
ok 207 interactive: tcsh attachs to an activation from the previous release in 1024ms
ok 208 command-mode: bash attachs to an activation from the previous release in 963ms
ok 209 command-mode: fish attachs to an activation from the previous release in 1352ms
ok 210 command-mode: tcsh attachs to an activation from the previous release in 923ms
ok 211 command-mode: zsh attachs to an activation from the previous release in 1430ms
not ok 212 in-place: bash attachs to an activation from the previous release in 892ms
# tags: activate activate activate:attach activate:attach:previous-release
# (from function `assert_output' in file /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/share/bats/bats-assert/src/assert_output.bash, line 194,
#  from function `attach_previous_release' in file activate.bats, line 4339,
#  in test file activate.bats, line 4393)
#   `attach_previous_release bash in-place' failed
# ✨ Created environment 'project-212' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# ✅ Environment successfully updated.
#
# sourcing hook.on-activate for first time
# Sourcing .bashrc
# Setting PATH from .bashrc
#
# -- output differs --
# expected (2 lines):
#   Sourcing .bashrc
#   Setting PATH from .bashrc
# actual (0 lines):
#
# --
#
#
ok 213 in-place: fish attachs to an activation from the previous release in 1365ms
ok 214 in-place: tcsh attachs to an activation from the previous release in 918ms
ok 215 in-place: zsh attachs to an activation from the previous release in 1432ms
ok 216 profile scripts run for all environments in nested bash interactive activation in 1022ms
ok 217 profile scripts run for all environments in nested fish interactive activation in 1675ms
ok 218 profile scripts run for all environments in nested tcsh interactive activation in 1038ms
ok 219 profile scripts run for all environments in nested zsh interactive activation in 2622ms
ok 220 profile scripts run for all environments in nested bash command activation in 966ms
ok 221 profile scripts run for all environments in nested fish command activation in 1280ms
ok 222 profile scripts run for all environments in nested tcsh command activation in 988ms
ok 223 profile scripts run for all environments in nested zsh command activation in 2065ms
ok 224 profile scripts run for all environments in nested bash in-place activation in 1036ms
ok 225 profile scripts run for all environments in nested fish in-place activation in 1355ms
ok 226 profile scripts run for all environments in nested tcsh in-place activation in 1028ms
ok 227 profile scripts run for all environments in nested zsh in-place activation in 2022ms
ok 228 bash: FLOX_ENV_* should reflect most recent user-initiated activation in 870ms
ok 229 fish: FLOX_ENV_* should reflect most recent user-initiated activation in 1026ms
ok 230 tcsh: FLOX_ENV_* should reflect most recent user-initiated activation in 891ms
ok 231 zsh: FLOX_ENV_* should reflect most recent user-initiated activation in 1864ms
ok 232 can activate an environment that includes environments in 1100ms
ok 233 shows notice about composition overrides when not locked in 792ms
ok 234 runs upgrade checks in the background on activate in 792ms
ok 235 bash: command: nested activation repairs (MAN)PATH in 1039ms
ok 236 bash: interactive: nested activation repairs (MAN)PATH in 1032ms
not ok 237 bash: in-place: nested activation repairs (MAN)PATH in 607ms
# tags: activate activate:bash activate:nested
# (from function `assert_output' in file /nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/share/bats/bats-assert/src/assert_output.bash, line 186,
#  from function `nested_activation_assertions' in file activate.bats, line 4980,
#  from function `check_nested_activation_repairs_path_and_manpath' in file activate.bats, line 4993,
#  in test file activate.bats, line 5008)
#   `check_nested_activation_repairs_path_and_manpath bash eval' failed
# ✨ Created environment 'default' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# ✨ Created environment 'outer' (aarch64-darwin)
#
# Next:
#   $ flox search <package>    <- Search for a package
#   $ flox install <package>   <- Install a package into an environment
#   $ flox activate            <- Enter the environment
#   $ flox edit                <- Add environment variables and shell hooks
#   $ flox push                <- Use the environment from other machines or
#                                 share it with someone on FloxHub
#
# PATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/bin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/sbin:/nix/store/6zaza3y7g04ilxmfr0l4vl1xrlxhbdz4-bats-1.12.0/libexec/bats-core:/Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug:/nix/store/fx3w71jy6d57i32k58jh6n5z1l8lii6z-bash-interactive-5.3p3/bin:/nix/store/lpw8c8czj01smmliz4y80bpikkm53q0s-fish-4.0.2/bin:/nix/store/s9iglfj14vbv1n9pwsambfly96x6i20v-tcsh-6.24.16/bin:/nix/store/8sifsbv26zrg9j7mq5mx376ib151zvis-zsh-5.9/bin:/nix/store/x9lf4y7s4yp6il66mv5npc2f99yy4vgq-dash-0.5.12/bin:/nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/bin:/nix/store/9i147r2fj9gj295jxa0nf2m4nwdkc94r-coreutils-9.7/bin:/nix/store/gv7qf6zgiarqg83hvmpmhp8kzlq628zd-curl-8.14.1-bin/bin:/nix/store/6p1kfmr4lsn6w42rnq2svg0gmwshr94s-diffutils-3.12/bin:/nix/store/y2h7s8wnisy2bdpaa1ljhccwamm6pidd-entr-5.7/bin:/nix/store/wh0gha8mr742ln775k0m24a4p81rh830-expect-5.45.4/bin:/nix/store/c09zwg0n8sgii76cy1ggmfs950srn4fv-findutils-4.10.0/bin:/nix/store/ahsg0s563409iwkin6pyyxxfwhrscrqs-gawk-5.3.2/bin:/nix/store/56avrmkafl3ymr5azsgx4lagzrhc79nd-git-2.50.1/bin:/nix/store/rvhvjvwcssnz7i8yyp436h7qrql2pvcz-gnugrep-3.12/bin:/nix/store/8dggzrv5nih8myns336b0gqp30czlg8d-gnupg-2.4.8/bin:/nix/store/vl63mv5qaqyfgb3y76p8zijacjm2rif3-gnused-4.9/bin:/nix/store/7gb37jk1hjsb8kww238by7cw1qi9sczm-gnutar-1.35/bin:/nix/store/w58c3ip3177vib3zwnmnjk5q62hvfjqz-jq-1.8.1-bin/bin:/nix/store/ip6srscrihwxkhw4jq0v5wsayvc1iwin-man-db-2.13.1/bin:/nix/store/h6sr3zbvrla8i2vj5dc89ip24irs026c-ncurses-6.5/bin:/nix/store/cc3lbc73ysk9bic3ji1vbbh7gdq31azz-nix-2.28.4/bin:/nix/store/49psgc9m367a2zbg19xl0iyx4bplzaxx-openssh-10.0p2/bin:/nix/store/d1pf44a897gpa7yl4sc5y7vsnhdladrh-parallel-20250822/bin:/nix/store/lc0ziwvh7ikpq5057i1jr4438g6w8hdb-pstree-2.39/bin:/nix/store/rh7j7kxc799ri5c71fsymhm50by3bhy3-util-linux-1003.1-2008/bin:/nix/store/7ih1f9q5731w0i3p8h3lqd997mrhf15b-util-linux-2.41.1-bin/bin:/nix/store/ib5b16x3rb6lhwbhj3jy604hyfv8f1pf-which-2.23/bin:/nix/store/cwkvnk1i3is9h369g6s9qrd4h4ynf9qr-python3.13-yq-3.4.3/bin:/nix/store/27ws9d0s33whr7dr11n6bs4j171v4c42-process-compose-1.73.0/bin:/nix/store/p5mdgdar62yhm29y9fignx7szp7i8vny-procps-1003.1-2008/bin:/nix/store/bxsjr6ivqilmb5d5ayq5bc24lia7r3vk-podman-5.6.0/bin:/run/wrappers/bin:/nix/store/ycb672sy3cadcaahyxscblrzdmja9grg-locale/bin
# MANPATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/share/man:/Users/zmitchell/src/flox/double-bashrc-exec/build/flox-manpages/share/man::/Applications/Ghostty.app/Contents/Resources/ghostty/../man
#
# -- output does not contain substring --
# substring (1 lines):
#   PATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/bin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/sbin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/default/.flox/run/aarch64-darwin.default.dev/bin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/default/.flox/run/aarch64-darwin.default.dev/sbin:before_path
# output (2 lines):
#   PATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/bin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/sbin:/nix/store/6zaza3y7g04ilxmfr0l4vl1xrlxhbdz4-bats-1.12.0/libexec/bats-core:/Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug:/nix/store/fx3w71jy6d57i32k58jh6n5z1l8lii6z-bash-interactive-5.3p3/bin:/nix/store/lpw8c8czj01smmliz4y80bpikkm53q0s-fish-4.0.2/bin:/nix/store/s9iglfj14vbv1n9pwsambfly96x6i20v-tcsh-6.24.16/bin:/nix/store/8sifsbv26zrg9j7mq5mx376ib151zvis-zsh-5.9/bin:/nix/store/x9lf4y7s4yp6il66mv5npc2f99yy4vgq-dash-0.5.12/bin:/nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/bin:/nix/store/9i147r2fj9gj295jxa0nf2m4nwdkc94r-coreutils-9.7/bin:/nix/store/gv7qf6zgiarqg83hvmpmhp8kzlq628zd-curl-8.14.1-bin/bin:/nix/store/6p1kfmr4lsn6w42rnq2svg0gmwshr94s-diffutils-3.12/bin:/nix/store/y2h7s8wnisy2bdpaa1ljhccwamm6pidd-entr-5.7/bin:/nix/store/wh0gha8mr742ln775k0m24a4p81rh830-expect-5.45.4/bin:/nix/store/c09zwg0n8sgii76cy1ggmfs950srn4fv-findutils-4.10.0/bin:/nix/store/ahsg0s563409iwkin6pyyxxfwhrscrqs-gawk-5.3.2/bin:/nix/store/56avrmkafl3ymr5azsgx4lagzrhc79nd-git-2.50.1/bin:/nix/store/rvhvjvwcssnz7i8yyp436h7qrql2pvcz-gnugrep-3.12/bin:/nix/store/8dggzrv5nih8myns336b0gqp30czlg8d-gnupg-2.4.8/bin:/nix/store/vl63mv5qaqyfgb3y76p8zijacjm2rif3-gnused-4.9/bin:/nix/store/7gb37jk1hjsb8kww238by7cw1qi9sczm-gnutar-1.35/bin:/nix/store/w58c3ip3177vib3zwnmnjk5q62hvfjqz-jq-1.8.1-bin/bin:/nix/store/ip6srscrihwxkhw4jq0v5wsayvc1iwin-man-db-2.13.1/bin:/nix/store/h6sr3zbvrla8i2vj5dc89ip24irs026c-ncurses-6.5/bin:/nix/store/cc3lbc73ysk9bic3ji1vbbh7gdq31azz-nix-2.28.4/bin:/nix/store/49psgc9m367a2zbg19xl0iyx4bplzaxx-openssh-10.0p2/bin:/nix/store/d1pf44a897gpa7yl4sc5y7vsnhdladrh-parallel-20250822/bin:/nix/store/lc0ziwvh7ikpq5057i1jr4438g6w8hdb-pstree-2.39/bin:/nix/store/rh7j7kxc799ri5c71fsymhm50by3bhy3-util-linux-1003.1-2008/bin:/nix/store/7ih1f9q5731w0i3p8h3lqd997mrhf15b-util-linux-2.41.1-bin/bin:/nix/store/ib5b16x3rb6lhwbhj3jy604hyfv8f1pf-which-2.23/bin:/nix/store/cwkvnk1i3is9h369g6s9qrd4h4ynf9qr-python3.13-yq-3.4.3/bin:/nix/store/27ws9d0s33whr7dr11n6bs4j171v4c42-process-compose-1.73.0/bin:/nix/store/p5mdgdar62yhm29y9fignx7szp7i8vny-procps-1003.1-2008/bin:/nix/store/bxsjr6ivqilmb5d5ayq5bc24lia7r3vk-podman-5.6.0/bin:/run/wrappers/bin:/nix/store/ycb672sy3cadcaahyxscblrzdmja9grg-locale/bin
#   MANPATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/share/man:/Users/zmitchell/src/flox/double-bashrc-exec/build/flox-manpages/share/man::/Applications/Ghostty.app/Contents/Resources/ghostty/../man
# --
#
# Last output:
# PATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/bin:/private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/sbin:/nix/store/6zaza3y7g04ilxmfr0l4vl1xrlxhbdz4-bats-1.12.0/libexec/bats-core:/Users/zmitchell/src/flox/double-bashrc-exec/cli/target/debug:/nix/store/fx3w71jy6d57i32k58jh6n5z1l8lii6z-bash-interactive-5.3p3/bin:/nix/store/lpw8c8czj01smmliz4y80bpikkm53q0s-fish-4.0.2/bin:/nix/store/s9iglfj14vbv1n9pwsambfly96x6i20v-tcsh-6.24.16/bin:/nix/store/8sifsbv26zrg9j7mq5mx376ib151zvis-zsh-5.9/bin:/nix/store/x9lf4y7s4yp6il66mv5npc2f99yy4vgq-dash-0.5.12/bin:/nix/store/4c5x3l6idiqq4anwwcw8vjdi3il2p6bh-bats-with-libraries-1.12.0/bin:/nix/store/9i147r2fj9gj295jxa0nf2m4nwdkc94r-coreutils-9.7/bin:/nix/store/gv7qf6zgiarqg83hvmpmhp8kzlq628zd-curl-8.14.1-bin/bin:/nix/store/6p1kfmr4lsn6w42rnq2svg0gmwshr94s-diffutils-3.12/bin:/nix/store/y2h7s8wnisy2bdpaa1ljhccwamm6pidd-entr-5.7/bin:/nix/store/wh0gha8mr742ln775k0m24a4p81rh830-expect-5.45.4/bin:/nix/store/c09zwg0n8sgii76cy1ggmfs950srn4fv-findutils-4.10.0/bin:/nix/store/ahsg0s563409iwkin6pyyxxfwhrscrqs-gawk-5.3.2/bin:/nix/store/56avrmkafl3ymr5azsgx4lagzrhc79nd-git-2.50.1/bin:/nix/store/rvhvjvwcssnz7i8yyp436h7qrql2pvcz-gnugrep-3.12/bin:/nix/store/8dggzrv5nih8myns336b0gqp30czlg8d-gnupg-2.4.8/bin:/nix/store/vl63mv5qaqyfgb3y76p8zijacjm2rif3-gnused-4.9/bin:/nix/store/7gb37jk1hjsb8kww238by7cw1qi9sczm-gnutar-1.35/bin:/nix/store/w58c3ip3177vib3zwnmnjk5q62hvfjqz-jq-1.8.1-bin/bin:/nix/store/ip6srscrihwxkhw4jq0v5wsayvc1iwin-man-db-2.13.1/bin:/nix/store/h6sr3zbvrla8i2vj5dc89ip24irs026c-ncurses-6.5/bin:/nix/store/cc3lbc73ysk9bic3ji1vbbh7gdq31azz-nix-2.28.4/bin:/nix/store/49psgc9m367a2zbg19xl0iyx4bplzaxx-openssh-10.0p2/bin:/nix/store/d1pf44a897gpa7yl4sc5y7vsnhdladrh-parallel-20250822/bin:/nix/store/lc0ziwvh7ikpq5057i1jr4438g6w8hdb-pstree-2.39/bin:/nix/store/rh7j7kxc799ri5c71fsymhm50by3bhy3-util-linux-1003.1-2008/bin:/nix/store/7ih1f9q5731w0i3p8h3lqd997mrhf15b-util-linux-2.41.1-bin/bin:/nix/store/ib5b16x3rb6lhwbhj3jy604hyfv8f1pf-which-2.23/bin:/nix/store/cwkvnk1i3is9h369g6s9qrd4h4ynf9qr-python3.13-yq-3.4.3/bin:/nix/store/27ws9d0s33whr7dr11n6bs4j171v4c42-process-compose-1.73.0/bin:/nix/store/p5mdgdar62yhm29y9fignx7szp7i8vny-procps-1003.1-2008/bin:/nix/store/bxsjr6ivqilmb5d5ayq5bc24lia7r3vk-podman-5.6.0/bin:/run/wrappers/bin:/nix/store/ycb672sy3cadcaahyxscblrzdmja9grg-locale/bin
# MANPATH is /private/tmp/nix-shell.ZT2M3S/bats-run-NtTeY7/test/237/project-237/outer/.flox/run/aarch64-darwin.outer.dev/share/man:/Users/zmitchell/src/flox/double-bashrc-exec/build/flox-manpages/share/man::/Applications/Ghostty.app/Contents/Resources/ghostty/../man
ok 238 tcsh: command: nested activation repairs (MAN)PATH in 1011ms
ok 239 tcsh: interactive: nested activation repairs (MAN)PATH in 1035ms
ok 240 tcsh: in-place: nested activation repairs (MAN)PATH in 927ms
ok 241 fish: command: nested activation repairs (MAN)PATH in 1269ms
ok 242 fish: interactive: nested activation repairs (MAN)PATH in 1527ms
ok 243 fish: in-place: nested activation repairs (MAN)PATH in 1028ms
ok 244 bash: profile scripts only run once with activation in dotfiles in 903ms
ok 245 fish: profile scripts only run once with activation in dotfiles in 1077ms
ok 246 tcsh: profile scripts only run once with activation in dotfiles in 933ms
ok 247 zsh: profile scripts only run once with activation in dotfiles in 1853ms
ok 248 bash: shell variables are preserved in subshells in 933ms
ok 249 fish: shell variables are preserved in subshells in 1361ms
ok 250 tcsh: shell variables are preserved in subshells in 1049ms
ok 251 zsh: shell variables are preserved in subshells in 2595ms
ok 252 bash: profile scripts can modify PATH with default environment in 935ms
ok 253 fish: profile scripts can modify PATH with default environment in 137ms # skip broken on fish
ok 254 tcsh: profile scripts can modify PATH with default environment in 135ms # skip broken on tcsh
ok 255 zsh: profile scripts can modify PATH with default environment in 2476ms
Error: command ["flox-cli-tests", "activate.bats"] exited with code 1
