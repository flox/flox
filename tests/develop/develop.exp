set attr [lindex $argv 0]
set flox $env(FLOX_CLI)
if {$attr eq ""} {
    set cmd "$flox -v develop"
    spawn $flox -v develop
} else {
    set cmd "$flox -v develop $attr"
    spawn $flox -v develop $attr
}
set timeout 30
expect {
    -re "(fetching|downloading)" {
        # fetching needs a higher timeout
        set timeout 90
        expect {
            "activating floxEnv" {}
            timeout {
              puts stderr "Reached timeout running '$cmd'"
              exit 1
            }
        }
        set timeout 30
    }
    "activating floxEnv" {}
    timeout {
      puts stderr "Reached timeout running '$cmd'"
      exit 1
    }
}
expect {
    "developing package" {}
    timeout {
      puts stderr "Reached timeout running '$cmd'"
      exit 1
    }
}
expect {
    -re "\$" {
        send "{ command -v rg||which rg||type -P rg; } 2>&1\n"
        expect {
            -re "/nix/store/.*-ripgrep-13.0.0/bin/rg" {}
            timeout {
              puts stderr "Reached timeout locating 'rg'"
              exit 1
            }
        }
    }
    timeout {
      puts stderr "Reached timeout running '$cmd'"
      exit 1
    }
}
expect {
    -re "\$" {
        send "{ command -v curl||which curl||type -P curl; } 2>&1\n"
        expect {
            -re ".*/(develop|toplevel-flox-nix-with-pkg)/.flox/envs/.*(my-pkg|default)/bin/curl" {}
            timeout {
              puts stderr "Reached timeout locating 'curl'"
              exit 1
            }
        }
    }
    timeout {
      puts stderr "Reached timeout locating 'rg'"
      exit 1
    }
}
expect {
    -re "\$" {
        send "exit\r"
        expect eof
    }
    timeout {
      puts stderr "Reached timeout locating 'curl'"
      exit 0
    }
}
exit 0
