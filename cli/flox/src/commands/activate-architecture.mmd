---
config:
  theme: mc
---
flowchart TB
 subgraph activate["Activate Script"]
        register["Register"]
        initialise["initialise"]
        attach["Attach"]
        invoke["invoke"]
        inplace["Attach in place"]
  end
 subgraph cli["Flox CLI"]
        n36["Initialise state:<br>FLOX_ENV<br>FLOX_ENV_DESCRIPTION<br>FLOX_ENV_PROJECT<br>FLOX_PARENT_PID<br>write metrics spool files<br>... plus temp files, etc."]
        n34{"in-place<br>mode?"}
        n79{"cmd mode?"}
        n37[["command.exec(bash $FLOX_ENV/activate)"]]
        n80[["command.exec(bash $FLOX_ENV/activate -- cmd args)"]]
        n35[["command.output(bash $FLOX_ENV/activate)"]]
        n88["parse args"]
        n89{"activate()"}
        n107{"already active?"}
        n108(["ERROR"])
  end
 subgraph register[". &lt;(activation start-or-attach)"]
        n41{"exists?<br>"}
        n116{"up to date<br>&amp;&amp;<br>PID alive<br>??"}
        n117{"ready?"}
        n118["do_attach()"]
        n119["do_start()"]
  end
 subgraph initialise["Start"]
        n7[["env0=snapshotEnv()"]]
        n6["source etc-profiles"]
        n62[["env1=snapshotEnv()<br>"]]
        nd["source [vars] (envrc)<br>source hook.on-activate<br>"]
        n63[["env2=snapshotEnv()<br>"]]
        na[["activation set-ready<br>"]]
      end
 subgraph inplace["Attach in place"]
        n43[["<span style="background-color: rgb(200, 230, 201);">activation attach --timeout X</span><br>"]]
        n45[["replayenv $userShell<br>(outputs to STDOUT)"]]
        n83(["cat $FLOX_ENV/activate.d/profile.common<br>cat $FLOX_ENV/activate.d/profile.$userShell<br>(_the latter replays the env again_)"])
        n84[["echo $out/libexec/activation attach --remove $$"]]
  end
 subgraph colorkey["Color Key"]
        node_aqepkktvr["flox CLI<br>(rust)"]
        n0["bash"]
        nz["userShell"]
        n111["activation<br>(rust)<br>"]
  end
 subgraph s2["process-compose"]
        n96["process-compose"]
        n98["flox-never-exit"]
  end
 subgraph watchdog["Watchdog (CLI mode)"]
        n93[["exec(watchdog)"]]
        ns[["Await death of ppid()<br>_and_<br>registry_PIDs($_FLOX_UUID)"]]
        ny[["Clean up state<br>(remove temp files, etc.)"]]
        nv(["Rust Destructors<br>(Submit sentry, metrics, etc.)"])
        n66[["stop_process-compose()"]]
        n94[["initialise tokio, sentry, metrics, etc."]]
        n100["submit spooled metrics, sentry data<br>"]
  end
 subgraph invoke["Invoke"]
        n105{"start process-compose<br>start services with -s"}
        n75{"cmd mode?"}
        n39{"in-place<br>mode?"}
        n70[["exec userShell"]]
        n71{"--turbo?"}
        n72(["exec cmd"])
        nq[["exec userShell"]]
        n5[["source $FLOX_ENV/activate.d/profile.common<br>source $FLOX_ENV/activate.d/profile.$userShell<br>(_the latter replays the env again_)"]]
        nx(["exec cmd"])
        n81[["source $FLOX_ENV/activate.d/profile.common<br>source $FLOX_ENV/activate.d/profile.$userShell<br>(_the latter replays the env again_)"]]
        n82(["interactive"])
  end
 subgraph attach["Attach"]
        n67[[". &lt;(replayenv bash)"]]
  end
    ns --> n66
    ny --> nv
    n7 --> n6
    n5 --> nx
    nv ~~~ colorkey
    node_aqepkktvr ~~~ n0
    n0 ~~~ nz
    n6 --> n62
    nq --> n5
    n75 -- yes --> n71
    n34 -- no --> n79
    n80 --> n41
    n43 --> n84
    n62 --> nd
    n66 --> ny
    n71 -- no --> nq
    n71 -- yes --> n72
    n75 -- no --> n39
    n79 -- no --> n107
    n79 -- yes: activate_command() --> n80
    n34 -- yes: activate_in_place() --> n35
    n67 --> n105
    n70 --> n81
    n81 --> n82
    n45 --> n83
    n84 --> n45
    n39 -- no --> n70
    n39 -- yes --> n43
    A(["Parent PID<br>flox activate<br>"]) -- fork() &amp;&amp; exec(flox) --> n88
    n88 --> n89
    n63 --> na
    n93 --> n94
    n94 --> n100
    n37 --> n41
    n35 --> n41
    n96 --> n98
    n89 --> n36
    n100 --> ns
    n107 -- yes --> n108
    n36 --> n34
    n105 -- parent --> n75
    n105 -- child --> n96
    na -- parent --> n105
    na -- child/daemonize --> n93
    n107 -- no: activate_interactive() --> n37
    n41 -- yes --> n116
    nz ~~~ n111
    n116 -- yes --> n117
    n117 -- yes --> n118
    n41 -- no --> n119
    n119 --> n7
    n118 --> n67
    n116 -- no --> n119
    n117 -- no (unlock,sleep,relock) --> n41
    nd --> n63
    style n36 fill:#FFE0B2
    style n34 fill:#FFE0B2
    style n79 fill:#FFE0B2
    style n37 fill:#FFE0B2
    style n80 fill:#FFE0B2
    style n35 fill:#FFE0B2
    style n88 fill:#FFE0B2
    style n89 fill:#FFE0B2
    style n107 fill:#FFE0B2
    style n108 fill:#FFCDD2
    style n41 fill:#C8E6C9
    style n116 fill:#C8E6C9
    style n117 fill:#C8E6C9
    style n118 fill:#C8E6C9
    style n119 fill:#C8E6C9
    style n7 fill:#BBDEFB
    style n6 fill:#BBDEFB
    style n62 fill:#BBDEFB
    style nd fill:#BBDEFB
    style n63 fill:#BBDEFB
    style na fill:#C8E6C9
    style n43 fill:#C8E6C9
    style n45 fill:#BBDEFB
    style n83 fill:#BBDEFB
    style n84 fill:#BBDEFB
    style node_aqepkktvr fill:#FFE0B2
    style n0 fill:#BBDEFB
    style nz fill:#E1BEE7
    style n111 fill:#C8E6C9
    style n93 fill:#FFE0B2,stroke-width:1px,stroke-dasharray: 0
    style ns fill:#FFE0B2
    style ny fill:#FFE0B2
    style nv fill:#FFE0B2
    style n66 fill:#FFE0B2
    style n94 fill:#FFE0B2
    style n100 fill:#FFE0B2
    style n105 fill:#BBDEFB
    style n75 fill:#BBDEFB
    style n39 fill:#BBDEFB
    style n70 fill:#BBDEFB
    style n71 fill:#BBDEFB
    style n72 fill:#BBDEFB
    style nq fill:#BBDEFB
    style n5 fill:#E1BEE7
    style nx fill:#E1BEE7
    style n81 fill:#E1BEE7
    style n82 fill:#E1BEE7
    style n67 fill:#BBDEFB
    style A fill:#FFFFFF
    style activate fill:#F8F8F8
    style cli fill:#F8F8F8
    style watchdog fill:#F8F8F8
    style s2 fill:#F8F8F8
