# Test 'flox install' prompts when an environment is activated and there is an environment in the containing git repo

set flox $env(FLOX_BIN)

# activate environment 1
set timeout 10
spawn $flox activate --dir 1
expect_after {
  timeout { exit 1 }
  eof { exit 2 }
  "*\n" { exp_continue }
  "*\r" { exp_continue }
}

# wait until we see the environment "greeting" message
expect -ex "To stop using this environment, type 'exit'" {}

# cd to directory 2/subdirectory
send "cd 2/subdirectory\n"

# install hello and expect an interactive prompt
send "$flox install hello\n"
expect -ex "Do you want to install to the flox environment detected in git repo or the current active flox environment?" {}
expect -re {flox environment detected in git repo \[2\]} {}
expect -re {current active flox environment \[1\]} {}
expect -re "type to filter.*\n"

# choose the first option and expect the corresponding installation
send "\r"
# install hello and check it's installed to environment 2
expect -re "âœ… 'hello' installed to environment '2'" {}

send "exit\n"
expect eof
