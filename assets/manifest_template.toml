#
# This is a flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(1) for more information.
#

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
_FLOX_INIT_INSTALL

# Set environment variables in the `[vars]` section.  These variables may not
# reference once another, and are added to the environment without first
# expanding them.  THey are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment for the first time only. Subsequent activations,
# such as the "in-place" activations performed by way of "dotfile" invocations
# in subshells will NOT re-run the script. This script inherits environment
# variables set in the `[vars]` section, and variables set by the script will
# be inherited by "profile" scripts defined below.  Any stdout generated by the
# script will be redirected to stderr to avoid it being interpreted as code for
# "in-place" activations.
[hook]
_FLOX_INIT_HOOK

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit env variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and must be compatible
# with all shells. The `profile.bash` and `profile.zsh` scripts will only be
# sourced by the corresponding shell after sourcing the `profile.common` script.
[profile]
_FLOX_INIT_PROFILE

# Additional options can be set in the `[options]` section.  Refer to
# manifest.toml(1) for a list of available options.
[options]

# An environment that works on one system is guaranteed to work on the same type
# of system, but other systems may not have the same packages available, etc.
# In order to use the environment on a system you must explicitly add it to the
# `options.systems` list.
systems = ["_FLOX_INIT_SYSTEM"]
