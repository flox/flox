# ============================================================================ #
#
# Build `pkgdb' and run its test suite.
#
# TODO:
# - Avoid `make bin' by using `nix build' outputs with test suite.
# - Avoid pushing the full `nix' store by pushing a list of store paths at the
#   start of the job and comparing it with the list of store paths at the end
#   of the job.
#   See `github:flox/install-flox-action' for an example.
#
#
# ---------------------------------------------------------------------------- #

name: Test
on:
  # No need to run on `main` since we have `merge_group' and `pull_request'.
  workflow_dispatch:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  all-tests:
    name: Tests ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Nix Flake Check
        run: nix flake check

      - name: Run Build
        run: nix develop '.#ci' --no-update-lock-file --command make -j4

      - name: Build Tests
        run: nix develop '.#ci' --no-update-lock-file --command make tests -j4

      - name: Run Tests
        run: nix develop '.#ci' --no-update-lock-file --command make check

      - name: Run Installed
        run: nix run . --no-update-lock-file -- --help

      - name: Push Nix Store Contents
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: nix copy --all --to 's3://flox-store?secret-key=/tmp/secret-key&write-nar-listing=1&ls-compression=br';

      - name: Save Nix Caches
        id: nix-cache-save
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cache/nix
          key: ${{ steps.nix-cache-restore.outputs.cache-primary-key }}


  # Aggregate test results
  all-tests-success:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Tests ( All Systems )
    needs: all-tests
    steps:
      - if: >-
          ${{
              contains( needs.*.result, 'failure'   ) ||
              contains( needs.*.result, 'cancelled' )
           }}
        run: exit 1


# ---------------------------------------------------------------------------- #
#
#
#
# ============================================================================ #
