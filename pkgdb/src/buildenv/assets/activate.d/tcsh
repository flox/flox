setenv _gnused "@gnused@"

if ( $_flox_activate_tracelevel >= 2 ) then
  set verbose
endif

# Assert that the expected _{add,del}_env variables are present.
if ( ! $?_add_env || ! $?_del_env ) then
  echo 'ERROR (tcsh): $_add_env and $_del_env not found in environment' >&2
  exit 1
endif

# We invoke tcsh with -f to prevent the user and system-wide
# config files from coming back and overriding the environment
# that we're trying to set up here, so we start by sourcing
# these files ourselves prior to setting up the environment.
foreach f ( /etc/csh.login /etc/csh.cshrc ~/.cshrc ~/.tcshrc )
  if ( -f $f ) then
    source $f
  endif
end

# Restore environment variables set in the previous bash initialization.
eval `$_gnused/bin/sed -e 's/^/unsetenv /' -e 's/$/;/' $_del_env`
eval `$_gnused/bin/sed -e 's/^/setenv /' -e 's/=/ /' -e 's/$/;/' $_add_env`

# Set the prompt if we're in an interactive shell.
if ( $?tty ) then
  source "$FLOX_ENV/activate.d/set-prompt.tcsh"
endif

# Source user-specified profile scripts if they exist.
foreach i ( profile-common profile-tcsh )
  if ( -e "$FLOX_ENV/activate.d/$i" ) then
    source "$FLOX_ENV/activate.d/$i"
  endif
end

# Disable command hashing to allow for newly installed flox packages
# to be found immediately.
unhash

# Disable tracing before potentially launching into user shell.
if ( $_flox_activate_tracelevel >= 2 ) then
  unset verbose
endif
unsetenv _flox_activate_tracelevel
