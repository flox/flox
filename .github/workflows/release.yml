name: Create Release

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      increment:
        type: choice
        description: |
          Which SemVer component shall this release increment?
          Leave on 'AUTO' to have commitizen pick the increment based on commits.
        options:
          - AUTO
          - MINOR
          - PATCH

jobs:
  # This workflow will do three things:
  # 1) it creates a release commit and tag on `develop`
  # 2) it merges the release into `main` (the prerelease branch)
  # 3) it fast-forwards `origin/{release}` and pushes the tag in an atomic operation

  increment-patch:
    if: ${{ startsWith( github.ref_name, 'release/' ) }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # checkout develop branch
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.NIX_GIT_TOKEN }}

      - name: Setup Git for Commits
        run: |
          git config --global user.name 'Flox Release (floxbot)'
          git config --global user.email 'technology@floxdev.com'

      # TODO: eventually replace with install flox action
      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          extra_nix_config: extra-access-tokens = github.com=${{ secrets.NIX_GIT_TOKEN }}

      - name: Squash commit and tag new release
        id: tag
        env:
          INCREMENT: ${{ inputs.increment }}
        run: |
          # run the release script
          git pull origin main:main
          bash .github/scripts/release.sh

      - name: "Push `${{ steps.tag.outputs.TAG }} (tag), main (branch)"
        run: |
          # push (1) the release tag (2) main branch (3) release "pointer" branch
          # the "latest" branch must not divert from the history of "main" anyway
          # so pusing to latest is just forwarding the branch
          git push --atomic origin \
            ${{ steps.tag.outputs.TAG }} \
            +${{ steps.tag.outputs.TAG }}~0:refs/heads/main \
            +${{ steps.tag.outputs.TAG }}~0:refs/heads/latest 
          
          # update the PR branch so github will close the PR
          # todo: close pr as a separate step through API?
          git push --force origin HEAD

