name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:

  build:
    name: Build and test flox on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: 
        - ubuntu-22.04-8core
        - macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install flox
      uses: flox/install-flox-action@main
      with:
        github-access-token: ${{ secrets.NIX_GIT_TOKEN }}
        substituter: s3://flox-store
        substituter-key: ${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build flox-gh
      run: nix build '.#flox-gh' -L --no-update-lock-file --print-out-paths --no-link

    - name: Build nix-editor
      run: nix build '.#nix-editor' -L --no-update-lock-file --print-out-paths --no-link

    - name: Build builtfilter-rs
      run: nix build '.#builtfilter-rs' -L --no-update-lock-file --print-out-paths --no-link

    - name: Build flox-bash
      run: nix build '.#flox-bash' -L --no-update-lock-file --print-out-paths --no-link

    # We want this in order to run `flox-tests', but we do not want to dirty
    # our workspace to avoid accidentally triggering rebuilds of
    # `builtfilter-rs' or `flox-tests'.
    - name: Build flox
      run: |
        nix build -L --no-update-lock-file --print-out-paths
        echo "FLOX_CLI=$( readlink -f ./result; )/bin/flox" >> "$GITHUB_ENV";
        git clean -xfd;

    - name: Build flox-tests
      run: nix build '.#flox-tests' -L --no-update-lock-file --print-out-paths --no-link

    - name: Cache the store
      if: ${{ always() }}
      run: nix copy --all --to "$FLOX_SUBSTITUTER" -vv

    - name: Rust Tests
      run: nix develop --no-update-lock-file -c cargo test --locked --workspace

    # The cargo tests may have dirtied the workspace so we need to clean.
    # We ultimately test against the `FLOX_CLI' env var's path set earlier.
    - name: Bats Test
      run: |
        git clean -xfd;
        nix run --no-update-lock-file '.#flox-tests';
