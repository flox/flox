name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  cargo-test:
    name: "Run Cargo Tests"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - "ubuntu-22.04-8core"
        - "macos-latest"

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: "Install flox"
      uses: flox/install-flox-action@main
      with:
        github-access-token: ${{ secrets.NIX_GIT_TOKEN }}
        substituter: s3://flox-store
        substituter-key: ${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: "Cache cargo"
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-${{ runner.os }}-

    - name: "Cargo Test"
      run: |
        nix develop -L \
          --extra-experimental-features "nix-command flakes" \
          --no-update-lock-file \
          '.#ci' \
            --command cargo test --locked --workspace;

  nix-build:
    name: "Build and Run Bats Tests"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - "ubuntu-22.04-8core"
        - "macos-latest"

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: "Install flox"
      uses: flox/install-flox-action@main
      with:
        github-access-token: ${{ secrets.NIX_GIT_TOKEN }}
        substituter: s3://flox-store
        substituter-key: ${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: "Build flox"
      run: |
        nix build -L \
            --extra-experimental-features "nix-command flakes" \
            --no-update-lock-file \
            --print-out-paths \
            '.#flox'
        echo "FLOX_CLI=$(readlink -f ./result; )/bin/flox" >> "$GITHUB_ENV"
        rm ./result

    - name: "Build flox-tests"
      run: |
        nix build -L \
            --extra-experimental-features "nix-command flakes" \
            --no-update-lock-file \
            --print-out-paths \
            --no-link \
            '.#flox-tests'

    # We test against the `FLOX_CLI' env var's path set earlier.
    - name: "Bats Tests"
      run: |
        git clean -xfd
        nix run \
            --extra-experimental-features "nix-command flakes" \
            --no-update-lock-file \
            '.#flox-tests'
