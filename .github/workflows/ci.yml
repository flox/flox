name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
  merge_group:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  cargo-test:
    name: "Flox Cargo Tests"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-22.04-8core"
          - "macos-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install flox"
        uses: "flox/install-flox-action@main"
        with:
          github-access-token:    "${{ secrets.NIX_GIT_TOKEN }}"
          substituter:            "s3://flox-store"
          substituter-key:        "${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}"
          aws-access-key-id:      "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key:  "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          ssh-key:                "${{ secrets.FLOXBOT_SSH_KEY }}"

      - name: "Cache cargo"
        uses: "actions/cache@v3"
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: "cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
          restore-keys: "cargo-${{ runner.os }}-"

      - name: "Cargo Test"
        run: |
          nix develop -L \
            --accept-flake-config \
            --extra-experimental-features "nix-command flakes" \
            --no-update-lock-file \
            '.#flox' \
              --command cargo test --locked --workspace -F extra-tests;

  env-builder-tests:
    name: "EnvBuilder Bats Tests"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        system:
          - "x86_64-linux"
          - "x86_64-darwin"
          - "aarch64-linux"
          - "aarch64-darwin"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup Tailscale"
        uses: "tailscale/github-action@v2"
        with:
          args: "--timeout 30s --login-server ${{ vars.TAILSCALE_URL }}"
          tags: "tag:ci"
          authkey: "${{ secrets.TAILSCALE_AUTH_KEY }}"

      - name: "Install flox"
        uses: "flox/install-flox-action@main"
        with:
          github-access-token:    "${{ secrets.NIX_GIT_TOKEN }}"
          substituter:            "s3://flox-store"
          substituter-key:        "${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}"
          aws-access-key-id:      "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key:  "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          ssh-key:                "${{ secrets.FLOXBOT_SSH_KEY }}"
          remote-builders:        "${{ vars.FLOX_BUILDERS }}"

      - name: "Build flox-env-builder"
        run: |
          nix build -L \
              --accept-flake-config \
              --extra-experimental-features "nix-command flakes" \
              --no-update-lock-file \
              --print-out-paths \
              '.#flox'
          # We run bats tests later on against the `FLOX_CLI' env
          echo "FLOX_CLI=$(readlink -f ./result; )/bin/flox" >> "$GITHUB_ENV"
          rm ./result

      - name: "Run tests"
        run: |
          cd ./env-builder
          nix develop -L \
              --accept-flake-config \
              --extra-experimental-features "nix-command flakes" \
              --no-update-lock-file \
              --command make tests

  nix-build:
    name: "Flox Bats Tests"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        system:
          - "x86_64-linux"
          - "x86_64-darwin"
          - "aarch64-linux"
          - "aarch64-darwin"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup Tailscale"
        uses: "tailscale/github-action@v2"
        with:
          args: "--timeout 30s --login-server ${{ vars.TAILSCALE_URL }}"
          tags: "tag:ci"
          authkey: "${{ secrets.TAILSCALE_AUTH_KEY }}"

      - name: "Install flox"
        uses: "flox/install-flox-action@main"
        with:
          github-access-token:    "${{ secrets.NIX_GIT_TOKEN }}"
          substituter:            "s3://flox-store"
          substituter-key:        "${{ secrets.FLOX_STORE_PUBLIC_NIX_SECRET_KEY }}"
          aws-access-key-id:      "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key:  "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          ssh-key:                "${{ secrets.FLOXBOT_SSH_KEY }}"
          remote-builders:        "${{ vars.FLOX_BUILDERS }}"

      - name: "Find remote server to run tests on"
        run: |
          export REMOTE_SERVER=$(cat /etc/nix/machines | grep ${{ matrix.system }} | cut -f1 -d' ' | cut -f3 -d'/' | head -1)
          echo "REMOTE SERVER: $REMOTE_SERVER"
          echo "REMOTE_SERVER=$REMOTE_SERVER" >> $GITHUB_ENV

      - name: "Build flox"
        run: |
          nix build -L \
              --accept-flake-config \
              --extra-experimental-features "nix-command flakes" \
              --no-update-lock-file \
              --print-out-paths \
              '.#packages.${{ matrix.system }}.flox'
          # We run bats tests later on against the `FLOX_CLI' env
          echo "FLOX_CLI=$(readlink -f ./result; )/bin/flox" >> "$GITHUB_ENV"
          rm ./result

      - name: "Build Bats Tests (./#flox-tests)"
        run: |
          nix build -L \
              --accept-flake-config \
              --extra-experimental-features "nix-command flakes" \
              --no-update-lock-file \
              --print-out-paths \
              '.#packages.${{ matrix.system }}.flox-tests'
          nix copy --to "$FLOX_SUBSTITUTER" ./result

      - name: "Run Bats Tests (./#flox-tests)"
        run: |
          ssh $REMOTE_SERVER \
            nix run \
                --extra-experimental-features "nix-command flakes" \
                'github:flox/flox/${{ github.sha }}#packages.${{ matrix.system }}.flox-tests-ci'

      - name: "Build end2end Bats Tests (.#flox-tests-end2end)"
        run: |
          nix build -L \
              --accept-flake-config \
              --extra-experimental-features "nix-command flakes" \
              --no-update-lock-file \
              --print-out-paths \
              '.#packages.${{ matrix.system }}.flox-tests-end2end'
          nix copy --to "$FLOX_SUBSTITUTER" ./result

      - name: "Run Bats end2end Tests (./#flox-tests-end2end)"
        run: |
          git clean -xfd
          ssh $REMOTE_SERVER \
            nix run \
                --extra-experimental-features "nix-command flakes" \
                'github:flox/flox/${{ github.sha }}#packages.${{ matrix.system }}.flox-tests-end2end-ci'
